/* ===========================
   Dashboard Sheet — CSS
   =========================== */

/* Design width (used for full-page editing; the embed script scales it) */
:root { --sheet-width: 700px; }

/* Page backdrop */
html, body { height: 100%; }
body {
  margin: 0;
  background: #f6e4c1;            /* parchment */
  color: #2b2b2b;
  font-family: system-ui, Arial, sans-serif;
}

.hidden { display: none !important; }

/* Wraps the entire sheet page (header + canvas) */
#sheet-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 12px 48px;
}

/* When the sheet page is embedded and auto-scaled,
   JS creates #sheetFit and moves the canvas inside it.
   No special CSS required here. */

/* ---------- Header ---------- */
.sheet-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: .75rem;
  padding: 12px 10px;
  background: #e8d7b3;            /* slightly darker parchment bar */
  border: 2px solid #d0bfa2;
  border-radius: 8px;
  margin: 12px 0 8px;
}
.sheet-header .header-left,
.sheet-header .header-right {
  display: flex;
  align-items: center;
  gap: .5rem;
}
.sheet-header h1 {
  margin: 0;
  font-size: clamp(1.125rem, 2.2vw, 1.6rem);
  font-weight: 800;
  letter-spacing: .2px;
  line-height: 1.2;
}

/* Buttons */
.btn {
  appearance: none;
  border: 1px solid #6ca05b;
  background: #7fb069;
  color: #fff;
  border-radius: 8px;
  padding: 6px 12px;
  font-weight: 600;
  cursor: pointer;
  transition: background-color .15s ease, transform .05s ease;
}
.btn:hover  { background: #6ca05b; }
.btn:active { transform: translateY(1px); }
.btn:disabled {
    background: #b0b0b0;
    border-color: #9e9e9e;
    cursor: not-allowed;
    opacity: 0.7;
}
.btn.btn-status { pointer-events: none; opacity: .9; }

/* Lock toggle colors (JS toggles text, not classes, so these are optional) */
#lock-toggle-btn.unlocked { background: #7fb069; }
#lock-toggle-btn.locked   { background: #8a6d3b; border-color: #7a5f30; }

/* ---------- Format toolbar ---------- */
.format-toolbar {
  display: flex;
  flex-wrap: wrap;
  gap: .4rem;
  align-items: center;
  padding: 10px;
  margin: 10px 0 14px;
  background: #f6e4c1;
  border: 2px solid #d0bfa2;
  border-radius: 8px;
}
.format-toolbar button,
.format-toolbar select {
  border: 1px solid #cbb796;
  background: #fff6e5;
  color: #333;
  border-radius: 6px;
  padding: 6px 10px;
  cursor: pointer;
}
.format-toolbar button:hover { background: #ffeecd; }

/* ===========================
   Fixed-width Canvas + Grid
   =========================== */

/* Fixed canvas width so blocks don't stretch as the right panel resizes.
   JS auto-scales when embedded; full-page sticks to this design width. */
.grid-container,
#blocks-container, /* in case you use this id directly */
.sheet,            /* support either selector */
#sheetCanvas {
  width: var(--sheet-width);
  max-width: var(--sheet-width);
  margin: 0 auto;             /* center the canvas in full-page view */
  display: grid;
  grid-template-columns: repeat(var(--grid-columns, 12), minmax(0, 1fr));
  grid-auto-rows: var(--row-size, 64px);
  gap: var(--grid-gap, 10px);
  padding: var(--grid-margin, 16px);
  background: #f2dfbb;        /* slightly different parchment inside */
  border: 2px solid #d0bfa2;
  border-radius: 10px;
  box-shadow: 0 6px 18px rgba(0,0,0,.08);
}

/* Individual blocks (grid item) */
.block {
  position: relative;
  background: #ffffff;
  border: 1px solid rgba(0,0,0,.08);
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,.06);
  overflow: hidden;
  outline: none;               /* remove contenteditable outline */
  transition: box-shadow .12s ease, transform .04s ease;
  display: grid;           /* or: display:flex */
  place-items: center;     /* grid shorthand = align-items + justify-items */
}
.block:focus-within { box-shadow: 0 6px 18px rgba(0,0,0,.14); }


/* If your black text box is the .block-content, keep it full-size & centered */
.block .block-content{
  width: 100%;
  height: 100%;
  display: grid;           /* or flex */
  place-items: center;
  text-align: center;      /* optional, centers text lines */
}

.block .block-content:empty:before {
  content: attr(data-placeholder);
  color: #888;
}

/* Resize handles */
.resize-handle {
  position: absolute;
  width: 14px;
  height: 14px;
  border-radius: 3px;
  background: rgba(0,0,0,.12);
  border: 1px solid rgba(0,0,0,.25);
  z-index: 3;
}
.resize-handle:hover { background: rgba(0,0,0,.18); }
.resize-handle.right        { top: 50%; right: -7px; transform: translateY(-50%); cursor: ew-resize; }
.resize-handle.bottom       { left: 50%; bottom: -7px; transform: translateX(-50%); cursor: ns-resize; }
.resize-handle.bottom-right { right: -7px; bottom: -7px; cursor: nwse-resize; }

/* Block actions (top-right corner) */
.block-actions {
    position: absolute;
    top: 4px;
    right: 4px;
    z-index: 5;
    display: flex;
    gap: 4px;
    opacity: 0; /* Initially hidden */
    transition: opacity 0.15s ease;
}
.block:hover .block-actions {
    opacity: 1; /* Show on hover */
}
.block-actions .icon-btn {
    width: 24px;
    height: 24px;
    border: none;
    border-radius: 6px;
    background: rgba(0,0,0,.08);
    cursor: pointer;
}
.block-actions .icon-btn:hover { background: rgba(0,0,0,.15); }


/* Dragging/Resizing feedback */
.block.dragging { opacity: .85; transform: scale(.995); box-shadow: 0 12px 30px rgba(0,0,0,.18); }
.block.resizing { user-select: none; box-shadow: 0 12px 30px rgba(0,0,0,.18); }

/* Ghost block used during drag/resize previews */
.block-ghost {
  background: repeating-linear-gradient(45deg, #b9ee8e, #91dc8f 8px, #b9ee8e 8px, #91dc8f 16px);
  border: 1px dashed #bbb;
  border-radius: 10px;
}

/* Image helpers (when a block contains an image) */
.img-wrap { position: relative; display: inline-block; max-width: 100%; width: 100%; height: 100%; }
.img-wrap img { max-width: 100%; max-height: 100%; display: block; border-radius: 8px; object-fit: contain; }

/* Floating add-block button (only shown when unlocked) */
#add-block-btn {
  position: fixed;
  right: 22px;
  bottom: 22px;
  width: 54px;
  height: 54px;
  border-radius: 50%;
  font-size: 28px;
  display: grid;
  place-items: center;
  z-index: 1000;
}

/* ---------- Locked UI (JS toggles .is-locked on #sheet-container) ---------- */
.is-locked .resize-handle,
.is-locked .block-actions {
  display: none !important;
}
.is-locked .block .block-content[contenteditable="true"] {
  user-select: text;
}

/* ---------- Small screens ---------- */
@media (max-width: 1024px) {
  .grid-container,
  #blocks-container,
  .sheet,
  #sheetCanvas {
    width: var(--sheet-width);
    max-width: var(--sheet-width);
    overflow: auto;
  }
  #sheet-container { padding-bottom: 72px; }
}

/* add or update */
.block-ghost{
  z-index: 50;              /* higher than blocks */
  pointer-events: none;     /* never capture the mouse */
}
.block.dragging,
.block.resizing{
  z-index: 10;              /* ensure the ghost can sit above */
}



/* ---- Fix list spacing/centering inside sheet blocks ---- */
/* ---- Center the content stack, but don't force text-align ---- */
.block .block-content{
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  /* vertical centering of the whole stack */
  justify-content: center;

  /* horizontal centering of the stack itself (default) */
  align-items: center;

  gap: .35rem;
  /* IMPORTANT: do NOT hard-force text-align here */
  text-align: initial;
}


/* Kill default margins so lists don't push content down */
.block .block-content > *{ margin: 0; }
.block .block-content > :first-child{ margin-top: 0; }
.block .block-content > :last-child{  margin-bottom: 0; }

/* Make lists play nice in centered blocks */
.block .block-content ul,
.block .block-content ol{
  margin: 0;                     /* remove browser default margins */
  padding-left: 1em;             /* modest indent */
  list-style-position: inside;   /* bullets inside the centered area */
  text-align: left;              /* list items read naturally */
}

/* Optional: smaller gap when a heading is followed by a list */
.block .block-content h1 + ul,
.block .block-content h2 + ul,
.block .block-content h3 + ul,
.block .block-content h4 + ul,
.block .block-content p  + ul { margin-top: .25rem; }

/* Optional helper for title/body pattern */
.block .title{ font-weight: 800; }





/* Toolbar look (reuse your existing .format-toolbar styles if present) */
#formatBar button, #formatBar select {
  border: 1px solid #cbb796;
  background: #fff6e5;
  color: #333;
  border-radius: 6px;
  padding: 6px 10px;
  cursor: pointer;
}
#formatBar button:hover { background: #ffeecd; }

/* Inline code inside contenteditable */
.block .block-content code {
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  background: rgba(0,0,0,.08);
  border: 1px solid rgba(0,0,0,.12);
  border-radius: 4px;
  padding: .05rem .3rem;
}

/* Optional: tidy checkboxes */
.block .block-content .cb {
  display: inline-flex;
  align-items: center;
  gap: .4rem;
}


/* Per-block text alignment controlled by data-align */
.block .block-content[data-align="left"]  { text-align: left;  align-items: flex-start; }
.block .block-content[data-align="center"]{ text-align: center; align-items: center;     }
.block .block-content[data-align="right"] { text-align: right; align-items: flex-end;    }




/* Make the real block see-through during drag/resize so the ghost is visible */
.block.dragging-active,
.block.resizing-active {
  opacity: 1;         /* tweak to taste: 0.45–0.7 is a good range */
  transition: opacity .05s ease;
}

/* Keep the ghost fully readable */
.block-ghost {
  opacity: 0.35;
}
